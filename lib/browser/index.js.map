{"version":3,"sources":["../../src/browser/index.js"],"names":["routeInfoByPath","routeErrorByPath","sharedDataByHash","inflightRouteInfo","inflightPropHashes","requestPool","concurrency","Number","process","env","REACT_STATIC_PREFETCH_RATE","plugins","registerPlugins","newPlugins","splice","Infinity","templates","templatesByPath","templateErrorByPath","templateUpdated","cb","registerTemplates","tmps","notFoundKey","Object","keys","forEach","key","registerTemplateForPath","path","template","init","REACT_STATIC_ENV","io","require","run","axios","get","port","data","socket","on","console","log","type","reloadRouteData","error","REACT_STATIC_DISABLE_PRELOAD","startPreloader","document","els","slice","call","getElementsByTagName","el","href","getAttribute","shouldPrefetch","prefetch","setInterval","REACT_STATIC_PRELOAD_POLL_INTERVAL","part","global","reloadAll","getRouteInfo","priority","routeInfo","REACT_STATIC_DISABLE_ROUTE_PREFIXING","routeInfoRoot","REACT_STATIC_BASE_PATH","REACT_STATIC_PUBLIC_PATH","REACT_STATIC_SITE_ROOT","cacheBuster","REACT_STATIC_CACHE_BUST","getPath","add","prefetchData","sharedData","Promise","all","sharedHashesByProp","map","hash","staticDataPath","REACT_STATIC_ASSETS_PATH","absoluteStaticDataPath","prop","prefetchTemplate","Template","templateLoaded","preload","options","stop","start","getCurrentRoutePath","decodeURIComponent","window","location"],"mappings":"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","sourcesContent":["import axios from 'axios'\n//\nimport {\n  createPool,\n  getRoutePath,\n  pathJoin,\n  isPrefetchableRoute,\n  getFullRouteData,\n  makePathAbsolute,\n} from './utils'\nimport onVisible from './utils/Visibility'\n\n// RouteInfo / RouteData\nexport const routeInfoByPath = {}\nexport const routeErrorByPath = {}\nexport const sharedDataByHash = {}\nconst inflightRouteInfo = {}\nconst inflightPropHashes = {}\n\nconst requestPool = createPool({\n  concurrency: Number(process.env.REACT_STATIC_PREFETCH_RATE),\n})\n\n// Plugins\nexport const plugins = []\nexport const registerPlugins = newPlugins => {\n  plugins.splice(0, Infinity, ...newPlugins)\n}\n\n// Templates\nexport const templates = {}\nexport const templatesByPath = {}\nexport const templateErrorByPath = {}\nexport const templateUpdated = { cb: () => {} }\nexport const registerTemplates = (tmps, notFoundKey) => {\n  Object.keys(templates).forEach(key => {\n    delete templates[key]\n  })\n  Object.keys(tmps).forEach(key => {\n    templates[key] = tmps[key]\n  })\n  templatesByPath['404'] = templates[notFoundKey]\n  templateUpdated.cb()\n}\nexport const registerTemplateForPath = (path, template) => {\n  path = getRoutePath(path)\n  templatesByPath[path] = templates[template]\n}\n\ninit()\n\n// When in development, init a socket to listen for data changes\n// When the data changes, we invalidate and reload all of the route data\nfunction init() {\n  // In development, we need to open a socket to listen for changes to data\n  if (process.env.REACT_STATIC_ENV === 'development') {\n    const io = require('socket.io-client')\n    const run = async () => {\n      try {\n        const {\n          data: { port },\n        } = await axios.get('/__react-static__/getMessagePort')\n        const socket = io(`http://localhost:${port}`)\n        socket.on('connect', () => {\n          console.log(\n            'React-Static data hot-loader websocket connected. Listening for data changes...'\n          )\n        })\n        socket.on('message', ({ type }) => {\n          if (type === 'reloadRoutes') {\n            reloadRouteData()\n          }\n        })\n      } catch (err) {\n        console.log(\n          'React-Static data hot-loader websocket encountered the following error:'\n        )\n        console.error(err)\n      }\n    }\n    run()\n  }\n\n  if (process.env.REACT_STATIC_DISABLE_PRELOAD === 'false') startPreloader()\n}\n\nfunction startPreloader() {\n  if (typeof document !== 'undefined') {\n    const run = () => {\n      const els = [].slice.call(document.getElementsByTagName('a'))\n      els.forEach(el => {\n        const href = el.getAttribute('href')\n        const shouldPrefetch = !(el.getAttribute('prefetch') === 'false')\n        if (href && shouldPrefetch) {\n          onVisible(el, () => {\n            prefetch(href)\n          })\n        }\n      })\n    }\n\n    setInterval(run, Number(process.env.REACT_STATIC_PRELOAD_POLL_INTERVAL))\n  }\n}\n\nexport function reloadRouteData() {\n  // Delete all cached data\n  ;[\n    routeInfoByPath,\n    sharedDataByHash,\n    routeErrorByPath,\n    inflightRouteInfo,\n    inflightPropHashes,\n  ].forEach(part => {\n    Object.keys(part).forEach(key => {\n      delete part[key]\n    })\n  })\n  // Force each RouteData component to reload\n  global.reloadAll()\n}\n\nexport async function getRouteInfo(path, { priority } = {}) {\n  path = getRoutePath(path)\n\n  // Check if we should fetch RouteData for this url et all.\n  if (!isPrefetchableRoute(path)) {\n    return\n  }\n\n  // Check the cache first\n  if (routeInfoByPath[path]) {\n    return routeInfoByPath[path]\n  }\n\n  // Check for an error or non-existent static route\n  if (routeErrorByPath[path]) {\n    return\n  }\n\n  let routeInfo\n\n  try {\n    if (process.env.REACT_STATIC_ENV === 'development') {\n      // In dev, request from the webpack dev server\n      if (!inflightRouteInfo[path]) {\n        inflightRouteInfo[path] = axios.get(\n          `/__react-static__/routeInfo/${path === '/' ? '' : path}`\n        )\n      }\n      const { data } = await inflightRouteInfo[path]\n      routeInfo = data\n    } else {\n      // In production, fetch the JSON file\n      // Find the location of the routeInfo.json file\n\n      // mbrowne modified\n      let routeInfoRoot\n      if (process.env.REACT_STATIC_DISABLE_ROUTE_PREFIXING) {\n        routeInfoRoot = (process.env.REACT_STATIC_BASE_PATH ? process.env.REACT_STATIC_PUBLIC_PATH: process.env.REACT_STATIC_SITE_ROOT) || '/';\n      }\n      else {\n        routeInfoRoot = process.env.REACT_STATIC_PUBLIC_PATH || '/'\n      }\n      // const routeInfoRoot =\n      //   (process.env.REACT_STATIC_DISABLE_ROUTE_PREFIXING === 'true'\n      //     ? process.env.REACT_STATIC_SITE_ROOT\n      //     : process.env.REACT_STATIC_PUBLIC_PATH) || '/'\n      const cacheBuster = process.env.REACT_STATIC_CACHE_BUST\n        ? `?${process.env.REACT_STATIC_CACHE_BUST}`\n        : ''\n      \n      // mbrowne modified\n      let getPath = `${routeInfoRoot}${pathJoin(\n        path,\n        'routeInfo.json'\n      )}${cacheBuster}`\n      if (process.env.REACT_STATIC_BASE_PATH) {\n        getPath = `/${getPath}`\n      }\n      // const getPath = `${routeInfoRoot}${pathJoin(\n      //   path,\n      //   'routeInfo.json'\n      // )}${cacheBuster}`\n\n      // If this is a priority call bypass the queue\n      if (priority) {\n        const { data } = await axios.get(getPath)\n        routeInfo = data\n      } else {\n        // Otherwise, add it to the queue\n        if (!inflightRouteInfo[path]) {\n          inflightRouteInfo[path] = requestPool.add(() => axios.get(getPath))\n        }\n        const { data } = await inflightRouteInfo[path]\n        routeInfo = data\n      }\n    }\n  } catch (err) {\n    // If there was an error, mark the path as errored\n    routeErrorByPath[path] = true\n    // Unless we already fetched the 404 page,\n    // try to load info for the 404 page\n    if (!routeInfoByPath['404'] && !routeErrorByPath['404']) {\n      getRouteInfo('404', { priority })\n      return\n    }\n\n    return\n  }\n  if (!priority) {\n    delete inflightRouteInfo[path]\n  }\n  if (typeof routeInfo !== 'object' || !routeInfo.path) {\n    // routeInfo must have returned 200, but is not actually\n    // a routeInfo object. Mark it as an error and move on silently\n    routeErrorByPath[path] = true\n  } else {\n    routeInfoByPath[path] = routeInfo\n  }\n  return routeInfoByPath[path]\n}\n\nexport async function prefetchData(path, { priority } = {}) {\n  // Get route info so we can check if path has any data\n  const routeInfo = await getRouteInfo(path, { priority })\n\n  // Not a static route? Bail out.\n  if (!routeInfo) {\n    return\n  }\n\n  // Defer to the cache first. In dev mode, this should already be available from\n  // the call to getRouteInfo\n  if (routeInfo.sharedData) {\n    return getFullRouteData(routeInfo)\n  }\n\n  // Request and build the props one by one\n  routeInfo.sharedData = {}\n\n  // Request the template and loop over the routeInfo.sharedHashesByProp, requesting each prop\n  await Promise.all(\n    Object.keys(routeInfo.sharedHashesByProp).map(async key => {\n      const hash = routeInfo.sharedHashesByProp[key]\n\n      // Check the sharedDataByHash first\n      if (!sharedDataByHash[hash]) {\n        // Reuse request for duplicate inflight requests\n        try {\n          const staticDataPath = pathJoin(\n            process.env.REACT_STATIC_ASSETS_PATH,\n            `staticData/${hash}.json`\n          )\n          const absoluteStaticDataPath = makePathAbsolute(staticDataPath)\n\n          // If priority, get it immediately\n          if (priority) {\n            const { data: prop } = await axios.get(absoluteStaticDataPath)\n            sharedDataByHash[hash] = prop\n          } else {\n            // Non priority, share inflight requests and use pool\n            if (!inflightPropHashes[hash]) {\n              inflightPropHashes[hash] = requestPool.add(() =>\n                axios.get(absoluteStaticDataPath)\n              )\n            }\n            const { data: prop } = await inflightPropHashes[hash]\n            // Place it in the cache\n            sharedDataByHash[hash] = prop\n          }\n        } catch (err) {\n          console.log(\n            'Error: There was an error retrieving a prop for this route! hashID:',\n            hash\n          )\n          console.error(err)\n        }\n        if (!priority) {\n          delete inflightPropHashes[hash]\n        }\n      }\n\n      // Otherwise, just set it as the key\n      routeInfo.sharedData[key] = sharedDataByHash[hash]\n    })\n  )\n\n  return getFullRouteData(routeInfo)\n}\n\nexport async function prefetchTemplate(path, { priority } = {}) {\n  // Clean the path\n  path = getRoutePath(path)\n  // Get route info so we can check if path has any data\n  const routeInfo = await getRouteInfo(path, { priority })\n\n  if (routeInfo) {\n    // Make sure to use the path as defined in the routeInfo object here.\n    // This will make sure 404 route info returned from getRouteInfo is handled correctly.\n    registerTemplateForPath(routeInfo.path, routeInfo.template)\n  }\n\n  // Preload the template if available\n  const Template = templatesByPath[path]\n  if (!Template) {\n    // If no template was found, mark it with an error\n    templateErrorByPath[path] = true\n    return\n  }\n\n  // If we didn't no route info was return, there is nothing more to do here\n  if (!routeInfo) {\n    return Template\n  }\n\n  if (!routeInfo.templateLoaded && Template.preload) {\n    if (priority) {\n      await Template.preload()\n    } else {\n      await requestPool.add(() => Template.preload())\n    }\n    routeInfo.templateLoaded = true\n  }\n  return Template\n}\n\nexport async function prefetch(path, options = {}) {\n  // Clean the path\n  path = getRoutePath(path)\n\n  const { type } = options\n\n  // If it's priority, we stop the queue temporarily\n  if (options.priority) {\n    requestPool.stop()\n  }\n\n  let data\n  if (type === 'data') {\n    data = await prefetchData(path, options)\n  } else if (type === 'template') {\n    await prefetchTemplate(path, options)\n  } else {\n    ;[data] = await Promise.all([\n      prefetchData(path, options),\n      prefetchTemplate(path, options),\n    ])\n  }\n\n  // If it was priority, start the queue again\n  if (options.priority) {\n    requestPool.start()\n  }\n\n  return data\n}\n\nexport function getCurrentRoutePath() {\n  // If in the browser, use the window\n  if (typeof document !== 'undefined') {\n    return getRoutePath(decodeURIComponent(window.location.href))\n  }\n}\n"],"file":"index.js"}